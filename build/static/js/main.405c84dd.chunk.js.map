{"version":3,"sources":["feel/index.tsx","util/url.tsx","desire/dance.tsx","desire/blood.tsx","desire/text.tsx","desire/index.tsx","welcome/index.tsx","serviceWorker.ts","index.tsx"],"names":["Emoji","onClickHappy","onClickUpset","className","onClick","this","React","Component","HELPER_URL","JOKE","ADVICE","miku_v2","wavefile_v2","wavefile_camera","wavefile_short","Ammo","require","modelFile","vmdFiles","cameraFiles","audioFile","audioParams","delayTime","clock","THREE","scene","loader","MMDLoader","helper","MMDAnimationHelper","Dance","container","mesh","camera","material","renderer","effect","ready","onProgress","xhr","lengthComputable","percentComplete","loaded","total","console","log","Math","round","loadAnimationCallback","cameraAnimation","add","animation","load","buffer","listener","audio","setBuffer","position","z","err","loadWithAnimationCallback","mmd","physics","loadAnimation","onWindowResize","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","setSize","animate","requestAnimationFrame","renderAnimation","then","AmmoLib","init","document","createElement","body","appendChild","background","undefined","ambient","directionalLight","set","normalize","antialias","setPixelRatio","devicePixelRatio","domElement","OutlineEffect","loadWithAnimation","addEventListener","update","getDelta","render","Blood","axios","Text","state","content","getData","type","props","method","headers","accept","url","response","setState","data","catch","error","Spinner","variant","Desire","contentComponent","onClickJoke","key","onClickSoup","onClickDance","onClickBlood","onClickSuprise","ListGroup","Item","action","renderList","renderContent","vex","registerPlugin","ISLOAD","Welcome","initAnimation","dialog","buttons","YES","text","alert","message","callback","value","Boolean","location","hostname","match","ReactDOM","StrictMode","exact","path","component","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.405c84dd.chunk.js","sourcesContent":["import React from 'react';\nimport './index.scss';\n\nclass Emoji extends React.Component {\n\n    onClickHappy = () => {\n    }\n\n    onClickUpset = () => {\n\n    }\n\n    render() {\n        return (\n          <ul className=\"emojis\">\n            <li onClick={this.onClickHappy}>\n                <div className=\"face-1\">\n                    <div className=\"eyes\"></div>\n                    <div className=\"mouth\"></div>\n                </div>\n            </li>\n            <li onClick={this.onClickUpset}>\n                <div className=\"face-2\">\n                <div className=\"eyes\"></div>\n                <div className=\"mouth\"></div>\n                </div>\n            </li>\n            <li>\n                <div className=\"face-3\">\n                <div className=\"eyes\"></div>\n                <div className=\"mouth\"></div>\n                </div>\n            </li>\n            <li onClick={this.onClickUpset}>\n                <div className=\"face-4\">\n                <div className=\"eyes\"></div>\n                <div className=\"mouth\"></div>\n                </div>\n            </li>\n            <li onClick={this.onClickUpset}>\n                <div className=\"face-5\">\n                <div className=\"eyes\"></div>\n                <div className=\"mouth\"></div>\n                </div>\n            </li>\n            <li className=\"blue\" onClick={this.onClickUpset}>\n                <div className=\"face-6\">\n                <div className=\"eyes\"></div>\n                <div className=\"mouth\"></div>\n                </div>\n            </li>\n          </ul>\n        );\n    }\n}\n\nexport default Emoji;\n","interface API {\n    // FEELING: object,\n    [key: string]: string;\n}\nexport const HELPER_URL: API = {\n    // FEELING: {},\n    JOKE: \"http://localhost:3000/joke\",\n    ADVICE: \"http://localhost:3000/advice\",\n    miku_v2: \"https://cdn.rawgit.com/mrdoob/three.js/r87/examples/models/mmd/miku/miku_v2.pmd\",\n    wavefile_v2: \"https://cdn.rawgit.com/mrdoob/three.js/r87/examples/models/mmd/vmds/wavefile_v2.vmd\",\n    wavefile_camera: \"https://cdn.rawgit.com/mrdoob/three.js/r87/examples/models/mmd/vmds/wavefile_camera.vmd\",\n    wavefile_short: \"https://cdn.rawgit.com/mrdoob/three.js/r87/examples/models/mmd/audios/wavefile_short.mp3\"\n};\n","import React from \"react\";\nimport * as THREE from \"three\";\nimport { OutlineEffect } from \"three/examples/jsm/effects/OutlineEffect.js\";\nimport { MMDLoader } from \"three/examples/jsm/loaders/MMDLoader.js\";\nimport { MMDAnimationHelper } from \"three/examples/jsm/animation/MMDAnimationHelper.js\";\nimport { HELPER_URL } from '../util/url';\nimport \"./index.scss\";\n\nlet Ammo = require(\"three/examples/js/libs/ammo.js\");\n// LOCAL FILE FROM OTHER LICIENSE\n\nconst { miku_v2, wavefile_v2, wavefile_camera, wavefile_short } = HELPER_URL;\nconst modelFile = miku_v2;\nconst vmdFiles = [wavefile_v2];\nconst cameraFiles = wavefile_camera;\nconst audioFile = wavefile_short;\nconst audioParams = { delayTime: (160 * 1) / 30 };\n\nconst clock = new THREE.Clock();\nconst scene = new THREE.Scene();\nconst loader = new MMDLoader();\nconst helper = new MMDAnimationHelper();\n\nclass Dance extends React.Component {\n  container: any;\n  mesh: any;\n  camera: any;\n  scene: any;\n  material: any;\n  renderer: any;\n  effect: any;\n  helper: any;\n  ready = false;\n\n  componentDidMount() {\n    Ammo().then((AmmoLib: any) => {\n        Ammo = AmmoLib;\n        this.init();\n        this.animate();\n    } );\n  }\n\n  onProgress = (xhr: {\n    lengthComputable: any;\n    loaded: number;\n    total: number;\n  }) => {\n    if (xhr.lengthComputable) {\n      const percentComplete = (xhr.loaded / xhr.total) * 100;\n      console.log(Math.round(percentComplete) + \"% downloaded\");\n    }\n  };\n  \n  loadAnimationCallback = (cameraAnimation: any) => {\n    helper.add(this.camera, {\n      animation: cameraAnimation\n    });\n\n    new THREE.AudioLoader().load(\n      audioFile,\n      (buffer: any) => {\n        const listener = new THREE.AudioListener();\n        const audio = new THREE.Audio(listener).setBuffer(buffer);\n\n        listener.position.z = 1;\n\n        helper.add(audio, audioParams);\n\n        scene.add(audio);\n        scene.add(listener);\n        scene.add(this.mesh);\n\n        this.ready = true;\n      },\n      this.onProgress,\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n  loadWithAnimationCallback = (mmd: { mesh: any; animation: any; }) => {\n        this.mesh = mmd.mesh;\n\n        helper.add(this.mesh, {\n            animation: mmd.animation,\n            physics: true\n        });\n\n        loader.loadAnimation(\n        cameraFiles,\n        this.camera,\n        this.loadAnimationCallback,\n        this.onProgress,\n        err => {\n            console.log(err);\n        }\n        );\n  }\n\n  init() {\n    this.container = document.createElement(\"div\");\n    document.body.appendChild(this.container);\n\n    this.camera = new THREE.PerspectiveCamera(\n      45,\n      window.innerWidth / window.innerHeight,\n      1,\n      2000\n    );\n\n    scene.background = new THREE.Color(0xffffff);\n\n    scene.add(new THREE.PolarGridHelper(30, 10, 10, 10, undefined, undefined));\n\n    const ambient = new THREE.AmbientLight(0x666666);\n    scene.add(ambient);\n\n    const directionalLight = new THREE.DirectionalLight(0x887766);\n    directionalLight.position.set(-1, 1, 1).normalize();\n    scene.add(directionalLight);\n\n    //\n\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.container.appendChild(this.renderer.domElement);\n\n    this.effect = new OutlineEffect(this.renderer, {});\n\n    loader.loadWithAnimation(\n      modelFile,\n      vmdFiles,\n      this.loadWithAnimationCallback,\n      this.onProgress,\n      err => {\n        console.log(err);\n      }\n    );\n\n    //\n\n    window.addEventListener(\"resize\", this.onWindowResize, false);\n  }\n\n  onWindowResize = () => {\n    this.camera.aspect = window.innerWidth / window.innerHeight;\n    this.camera.updateProjectionMatrix();\n\n    this.effect.setSize(window.innerWidth, window.innerHeight);\n  };\n\n  //\n\n  animate = () => {\n    requestAnimationFrame(this.animate);\n    this.renderAnimation();\n  };\n\n  renderAnimation() {\n    if (this.ready) {\n      helper.update(clock.getDelta());\n    }\n\n    this.effect.render(scene, this.camera);\n  }\n\n  render() {\n    return <div></div>;\n  }\n}\n\nexport default Dance;\n","import React from 'react';\nimport './index.scss';\n\nclass Blood extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <p>Blood</p>\n            </div>\n        );\n    }\n}\n\nexport default Blood;\n","import React from \"react\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { HELPER_URL } from \"../util/url\";\nimport \"./index.scss\";\n\nconst axios = require(\"axios\");\n\ntype TextProps = { type: string };\nclass Text extends React.Component<TextProps> {\n  state = {\n    content: null\n  };\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    const { type } = this.props;\n    const url = HELPER_URL[type];\n    axios({\n      method: \"get\",\n      headers: { accept: \"application/json\" },\n      url\n    })\n      .then((response: any) => {\n        // handle success\n        this.setState({\n          content: response.data.content\n        });\n      })\n      .catch((error: any) => {\n        // handle error\n        console.log(error);\n      })\n      .then(function() {\n        // always executed\n      });\n  }\n\n  render() {\n    const { content } = this.state;\n    return (\n      <div className=\"container\">\n        {content ? (\n          <p>{content}</p>\n        ) : (\n          <Spinner animation=\"grow\" variant=\"light\" />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Text;\n","import React from \"react\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Dance from \"./dance\";\nimport Blood from \"./blood\";\nimport Text from \"./text\";\nimport \"./index.scss\";\n\nclass Desire extends React.Component {\n      state = {\n        contentComponent: undefined,\n      };\n\n    onClickJoke = () => {\n        this.setState({\n            contentComponent: <Text type={\"JOKE\"} key=\"1\"/>,\n        });\n    };\n\n    onClickSoup = () => {\n        this.setState({\n            contentComponent: <Text type={\"ADVICE\"} key=\"2\" />,\n        });\n    };\n    onClickDance = () => { \n        this.setState({\n            contentComponent: <Dance key=\"3\" />,\n        });\n    };\n    onClickBlood = () => { \n        this.setState({\n            contentComponent: <Blood key=\"4\" />,\n        });\n    };\n    onClickSuprise = () => { \n        this.setState({\n            contentComponent: <Text type={\"JOKE\"}  key=\"5\"/>,\n        });\n    };\n\n    renderContent() { \n        const { contentComponent } = this.state;\n        return contentComponent;\n    }\n\n    renderList() {\n        return (\n            <ListGroup.Item>\n                <ListGroup.Item onClick={this.onClickJoke} action variant=\"primary\">\n                    Tell me a joke!\n                </ListGroup.Item>\n                <ListGroup.Item onClick={this.onClickSoup} action variant=\"secondary\">\n                    Drink a cup of chicken soup!\n                </ListGroup.Item>\n                <ListGroup.Item onClick={this.onClickDance} action variant=\"success\">\n                    Dancing for me!\n                </ListGroup.Item>\n                <ListGroup.Item onClick={this.onClickBlood} action variant=\"danger\">\n                    Warm my blood!\n                </ListGroup.Item>\n                <ListGroup.Item onClick={this.onClickSuprise} action variant=\"dark\">\n                    I don't care, suprise me!\n                </ListGroup.Item>\n            </ListGroup.Item>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <p>What do you want?</p>\n                {this.renderList()}\n                {this.renderContent()}\n            </div>\n        );\n    }\n}\n\nexport default Desire;\n","import React from 'react';\nimport './index.scss';\nimport Feel from '../feel';\n//FIXME\nimport Desire from '../desire';\n\nimport \"vex-js/dist/css/vex-theme-wireframe.css\";\nimport \"vex-js/dist/css/vex.css\";\n\nconst vex = require('vex-js')\nvex.registerPlugin(require('vex-dialog'));\n\n// make sure load once.\nlet ISLOAD = false;\nclass Welcome extends React.Component {\n    \n    constructor(props: any) {\n        super(props);\n        if (!ISLOAD) {\n            this.initAnimation();\n        }\n    }\n\n    initAnimation() {\n        vex.dialog.buttons.YES.text = '►';\n        vex.dialog.alert({\n            message: 'Holla, nice to meet you here. how are you?',\n            className: 'vex-theme-wireframe',\n            callback: (value: any) => {\n                if (value) {\n                    console.log('Successfully destroyed the planet1.')\n                    // this.initFeel();\n                } else {\n                    console.log('Chicken1.')\n                }\n            }\n        });\n        ISLOAD = true;\n    }\n\n    render() {\n        return <div className=\"App\">\n            <div className=\"words\">\n                <h1>Holla, nice to meet you here.</h1>\n                <h3>how are you?</h3>\n            </div>\n            <Feel />\n            <Desire />\n        </div>\n    }\n}\n\nexport default Welcome;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Welcome from \"./welcome\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.scss\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <Switch>\n                <Route exact path=\"/accompany\" component={Welcome} />\n            </Switch>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}